/*
 * ----------------------------------
 *  University of Illinois Biocluster
 * ----------------------------------
 * 
 * Note: this should be run in conjunction with profile 'singularity' and is used for
 * testing locally
 * 
 */

base = 'UIUC-HPCBio'

process {    
    executor = 'slurm'
    clusterOptions = { "-A $params.project ${params.clusterOptions ?: ''}" }

    // NB: Overwrite this in a config file in the working directory (nextflow.config) or with -c

    // TODO: check singularity mounting options
    // stageInMode = 'symlink'
    // stageOutMode = 'rsync'
    
    queue = 'hpcbio'

    // need to load this in 
    module = "singularity/3.8.1"
    
    container='ghcr.io/h3abionet/tada:dev'

    withName: runFastQC {
        container='quay.io/h3abionet_org/h3a16s-fastqc'
    }

    withName: runMultiQC {
        container='quay.io/h3abionet_org/h3a16s-fastqc'
    }

    withName: runFastQC_postfilterandtrim {
        container='quay.io/h3abionet_org/h3a16s-fastqc'
    }

    withName: runMultiQC_postfilterandtrim {
        container='quay.io/h3abionet_org/h3a16s-fastqc'
    }

    withName: itsFilterAndTrimStep2 {
        container='quay.io/biocontainers/cutadapt:3.5--py36hc5360cc_0'
    }

    withName:PoolSamplesInferDerepAndMerge {
        cpus = { check_max( 12 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:RemoveChimeras {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:AssignTaxSpeciesRDP {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:AssignTaxonomyRDP {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:TaxonomyIDTAXA {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }
    withName:AlignReadsDECIPHER {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 24.h * task.attempt, 'time' ) }
    }

    withName: GenerateTreeFasttree {
        container='quay.io/biocontainers/fasttree:2.1.10--h14c3975_3'
    }

    withName: QIIME2 {
        container = 'quay.io/h3abionet_org/qiime2'
    }

    withName:toQIIME2FeatureTable {
        container = 'quay.io/h3abionet_org/qiime2'
    }
    withName:toQIIME2TaxTable {
        container = 'quay.io/h3abionet_org/qiime2'
    }
    withName:toQIIME2Seq {
        container = 'quay.io/h3abionet_org/qiime2'
    }
    withName:toQIIME2Aln {
        container = 'quay.io/h3abionet_org/qiime2'
    }
    withName:toQIIME2Tree {
        container = 'quay.io/h3abionet_org/qiime2'
    }

    // PacBio-specific
    
    withName:PacBioLearnErrors {
        cpus = { check_max( 12 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:PacBioPoolSamplesInferDerep {
        cpus = { check_max( 12 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 36.h * task.attempt, 'time' ) }
    }

    // Loop-specific
    
    withName:LoopLearnErrors {
        cpus = { check_max( 12 * task.attempt, 'cpus') }
        memory = 72.GB
        time = { check_max( 18.h * task.attempt, 'time' ) }
    }

    withName:LoopPoolSamplesInferDerep {
        cpus = { check_max( 12 * task.attempt, 'cpus') }
        memory = 72.GB
        time = { check_max( 18.h * task.attempt, 'time' ) }
    }
}

executor{
   jobName = { "$task.tag" }
   queueSize = 6
}

params {
   max_memory = 256.GB
   max_cpus = 64
   max_time = 1000.h
}
