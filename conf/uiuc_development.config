/*
 * ----------------------------------
 *  University of Illinois Biocluster
 * ----------------------------------
 * 
 * Note: this should be run in conjunction with profile 'singularity' and is used for
 * testing locally
 * 
 */

base = 'UIUC-HPCBio'

singularity {
    cacheDir = '/home/groups/hpcbio/singularity'
    enabled = true
    autoMounts = true
}

process {    
    executor = 'slurm'
    clusterOptions = { "-A $params.project ${params.clusterOptions ?: ''}" }

    // NB: Overwrite this in a config file in the working directory (nextflow.config) or with -c

    // TODO: check singularity mounting options
    // stageInMode = 'symlink'
    // stageOutMode = 'rsync'
    // need to load this in 
    module = "singularity/3.8.1"
    
    container='ghcr.io/h3abionet/tada:dev'

    withName: Check_SampleSheet {
        container="quay.io/qiime2/core:2021.4"
    }

    withName: MergeCheck_VSEARCH {
        container="quay.io/biocontainers/vsearch:2.29.1--h6a68c12_0"
    }

    withName: RunFastQC {
        container='quay.io/biocontainers/fastqc:0.11.9--hdfd78af_1'
    }

    withName: RunFastQC_postfilterandtrim {
        container='quay.io/biocontainers/fastqc:0.11.9--hdfd78af_1'
    }

    withName: RunMultiQC_postfilterandtrim {
        container='quay.io/biocontainers/multiqc:1.13--pyhdfd78af_0'
    }

    withName: ITSFilterAndTrimStep2 {
        container='quay.io/biocontainers/cutadapt:4.1--py310h1425a21_1'
    }

    withName:DadaInfer {
        cpus = { check_max( 12 * task.attempt, 'cpus') }
        memory = 72.GB
        time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:PacBioTrim {
        container='quay.io/biocontainers/cutadapt:4.1--py310h1425a21_1'
    }

    withName:TrimStrainID {
        container='quay.io/biocontainers/cutadapt:4.1--py310h1425a21_1'
    }

    withName:RemoveChimeras {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:AssignTaxSpeciesRDP {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:AssignTaxonomyRDP {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withName:TaxonomyIDTAXA {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 12.h * task.attempt, 'time' ) }
    }
    
    withName:AlignReadsDECIPHER {
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
		time = { check_max( 24.h * task.attempt, 'time' ) }
    }

    withName:AlignReadsInfernal {
        container = 'quay.io/biocontainers/infernal:1.1.4--pl5321hec16e2b_1'
        cpus = { check_max( 8 * task.attempt, 'cpus') }
        memory = 72.GB
        time = { check_max( 24.h * task.attempt, 'time' ) }
    }

    withName:StockholmToFASTA {
        container = 'quay.io/qiime2/core:2021.4'
    }    

    withName: GenerateTreeFasttree {
        container='quay.io/biocontainers/fasttree:2.1.10--h14c3975_3'
    }

    withName:ToQIIME2FeatureTable {
        container = 'quay.io/qiime2/core:2021.4'
    }
    withName:ToQIIME2TaxTable {
        container = 'quay.io/qiime2/core:2021.4'
    }
    withName:ToQIIME2Seq {
        container = 'quay.io/qiime2/core:2021.4'
    }
    withName:ToQIIME2Aln {
        container = 'quay.io/qiime2/core:2021.4'
    }
    withName:ToQIIME2Tree {
        container = 'quay.io/qiime2/core:2021.4'
    }

    // Loop-specific
    
    // withName:LoopLearnErrors {
    //     cpus = { check_max( 12 * task.attempt, 'cpus') }
    //     memory = 72.GB
    //     time = { check_max( 18.h * task.attempt, 'time' ) }
    // }

    // withName:LoopPoolSamplesInferDerep {
    //     cpus = { check_max( 12 * task.attempt, 'cpus') }
    //     memory = 72.GB
    //     time = { check_max( 18.h * task.attempt, 'time' ) }
    // }
}

executor{
   jobName = { "$task.tag" }
   queueSize = 6
}

params {
   max_memory = 256.GB
   max_cpus = 64
   max_time = 1000.h
}
