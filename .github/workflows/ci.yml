name: CI

on:
  push:
    branches:
      - dev
      - master
  pull_request:
  release:
    types: [published]

jobs:
  build:
    name: Run workflow tests
    if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'h3abionet/TADA') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      NXF_VER: ${{ matrix.nxf_ver }}
      NXF_ANSI_LOG: false
    strategy:
      matrix:
        # Nextflow versions: check pipeline minimum and current latest
        nxf_ver: ["21.04.0", ""]
    steps:
      - name: Checkout pipeline code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup ref-data and test-data directories 
        run: |
          mkdir -p $HOME/ref-data $HOME/test-data/illumina
          cd $HOME/ref-data 
          wget https://zenodo.org/record/1172783/files/silva_nr_v132_train_set.fa.gz 
          wget https://zenodo.org/record/1172783/files/silva_species_assignment_v132.fa.gz
          cd $HOME/test-data/illumina 
          wget --no-check-certificate https://file-server.igb.illinois.edu/~cjfields/dog_stool_small.tgz 
          tar -xzvf dog_stool_small.tgz
      - name: Set up and install Nextflow
        run: |
          mkdir /tmp/nextflow && cd /tmp/nextflow
          wget -qO- get.nextflow.io | bash
          sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
      - name: Run Nextflow on test data (Illumina V4)
        run: |
          nextflow run ${{ github.workspace }}/main.nf -profile test-illumina,docker
      # - name: Set up Singularity
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y build-essential \
      #     libssl-dev \
      #     uuid-dev \
      #     libgpgme11-dev \
      #     squashfs-tools \
      #     libseccomp-dev \
      #     pkg-config
      #     export VERSION=1.16.5 OS=linux ARCH=amd64 && \
      #     wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz && \
      #     sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz && \
      #     rm go$VERSION.$OS-$ARCH.tar.gz
      #     echo 'export GOPATH=${HOME}/go' >> $HOME/.bashrc && \
      #     echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> $HOME/.bashrc && \
      #     source $HOME/.bashrc
      #     export GOPATH=${HOME}/go # Sourcing does not work, need to explicitly set GOPATH
      #     go get -u github.com/golang/dep/cmd/dep
      #     go get -d github.com/sylabs/singularity ||:
      #     export VERSION=v3.8.0 && \
      #     cd $GOPATH/src/github.com/sylabs/singularity && \
      #     git fetch && \
      #     git checkout $VERSION
      #     ./mconfig && \
      #     make -C ./builddir && \
      #     sudo make -C ./builddir install
